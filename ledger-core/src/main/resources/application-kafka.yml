spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      properties:
        key.serializer: org.apache.kafka.common.serialization.StringSerializer
        value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
        retries: 3
        acks: -1
    consumer:
      properties:
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
        value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
    properties:
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8081}
      auto.register.schemas: true
      processing.guarantee: exactly_once_v2

  cloud:
    function:
      definition: supplierAuditEvents;supplierLedgerEvents;ledgerRerouteProcessor;bookkeepingWaitForReconciliationProcessor;reconciledRecordsConsumer;projectedAccountBalanceConsumer;reconciliationFailedConsumer
    stream:
      bindings:
        supplierAuditEvents-out-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-audit-events
          content-type: application/*+avro
          producer:
            use-native-encoding: true
        supplierLedgerEvents-out-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-records
          content-type: application/*+avro
          producer:
            use-native-encoding: true
        ledgerRerouteProcessor-in-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-records
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 15
        ledgerRerouteProcessor-out-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-by-ref-records
          content-type: application/*+avro
          producer:
            partition-count: 30
            use-native-encoding: true

        bookkeepingWaitForReconciliationProcessor-in-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-by-ref-records
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 15
        bookkeepingWaitForReconciliationProcessor-out-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-waiting-records
          content-type: application/*+avro
          producer:
            partition-count: 30
            use-native-encoding: true
        bookkeepingWaitForReconciliationProcessor-out-1:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-unbalanced-records
          content-type: application/*+avro
          producer:
            partition-count: 30
            use-native-encoding: true

        reconciledRecordsConsumer-in-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-waiting-records
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 15

        reconciliationFailedConsumer-in-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-unbalanced-records
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 15

        projectedAccountBalanceConsumer-in-0:
          destination: ${ENV_PREFIX:local}-bookkeeping-ledger-records
          content-type: application/*+avro
          consumer:
            use-native-decoding: true
            concurrency: 15

      kafka:
        streams:
          bindings:
            reconciledRecordsConsumer-in-0:
              consumer:
                application-id: ${ENV_PREFIX:local}-bookkeeping-balance-records-join-processor-v0.23
            bookkeepingWaitForReconciliationProcessor-in-0:
              consumer:
                application-id: ${ENV_PREFIX:local}-bookkeeping-ledger-wait-processor-v0.23
            ledgerRerouteProcessor-in-0:
              consumer:
                application-id: ${ENV_PREFIX:local}-bookkeeping-ledger-reroute-processor-v0.23
            projectedAccountBalanceConsumer-in-0:
              consumer:
                application-id: ${ENV_PREFIX:local}-bookkeeping-account-balance-consumer-v0.23
            reconciliationFailedConsumer-in-0:
              consumer:
                application-id: ${ENV_PREFIX:local}-bookkeeping-ledger-reconcile-fail-consumer-v0.23

          binder:
            auto-create-topics: true
            configuration:
              default:
                key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        binder:
          min-partition-count: 30
          auto-add-partitions: true
